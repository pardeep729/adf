{
	"name": "DimProductCategory_DP",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ProductCategory",
						"type": "DatasetReference"
					},
					"name": "productcat"
				},
				{
					"dataset": {
						"referenceName": "dimProductCategory1",
						"type": "DatasetReference"
					},
					"name": "DimProductCategory",
					"description": "Current rows in DimEmployees DW table"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dimProductCategory1",
						"type": "DatasetReference"
					},
					"name": "sinkNew"
				},
				{
					"dataset": {
						"referenceName": "dimProductCategory1",
						"type": "DatasetReference"
					},
					"name": "sinkInactive",
					"description": "Close out the old version of the row"
				},
				{
					"dataset": {
						"referenceName": "dimProductCategory1",
						"type": "DatasetReference"
					},
					"name": "sinkChanges",
					"description": "New row with changes"
				}
			],
			"transformations": [
				{
					"name": "productcatWithSurrogate"
				},
				{
					"name": "DoesRowExist"
				},
				{
					"name": "RowHasChanged"
				},
				{
					"name": "productCatWithDates"
				},
				{
					"name": "AlterRow1"
				}
			],
			"script": "source(output(\n\t\tProductCategoryID as integer,\n\t\tParentProductCategoryID as integer,\n\t\tName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\twildcardPaths:['*.*']) ~> productcat\nsource(output(\n\t\tProductCategory as integer,\n\t\tname as string,\n\t\tParentProductCategoryID as integer,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimProductCategory\nproductcat, DimProductCategory lookup(productcat@Name == DimProductCategory@name,\n\tmultiple: false,\n\tpickup: 'first',\n\tdesc(EndDate, true),\n\tbroadcast: 'auto')~> productcatWithSurrogate\nproductCatWithDates split(isNull(ProductCategory),\n\tdisjoint: false) ~> DoesRowExist@(NewRow, CurrentRow)\nDoesRowExist@CurrentRow, DimProductCategory exists(DoesRowExist@CurrentRow@ProductCategory == DimProductCategory@ProductCategory\n\t&& DoesRowExist@CurrentRow@Name == DimProductCategory@name\n\t&& coalesce(ProductCategoryID,0) == coalesce(DimProductCategory@ParentProductCategoryID,0),\n\tnegate:true,\n\tbroadcast: 'auto')~> RowHasChanged\nproductcatWithSurrogate derive(StartDate = currentTimestamp(),\n\t\tEndDate = toTimestamp(\"9999-12-31 23:59:59\"),\n\t\tRowStatusNew = \"NEW\",\n\t\tRowStatusChange = \"CHANGE\") ~> productCatWithDates\nRowHasChanged alterRow(updateIf(1==1)) ~> AlterRow1\nDoesRowExist@NewRow sink(input(\n\t\tProductCategory as integer,\n\t\tname as string,\n\t\tParentProductCategoryID as integer,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tbatchSize: 50,\n\tmapColumn(\n\t\tProductCategory,\n\t\tname = DoesRowExist@NewRow@Name,\n\t\tParentProductCategoryID = DoesRowExist@NewRow@ParentProductCategoryID,\n\t\tStartDate,\n\t\tEndDate\n\t),\n\tpartitionBy('roundRobin', 4),\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError') ~> sinkNew\nAlterRow1 sink(input(\n\t\tProductCategory as integer,\n\t\tname as string,\n\t\tParentProductCategoryID as integer,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['ProductCategory'],\n\tskipKeyWrites:true,\n\tformat: 'table',\n\tbatchSize: 50,\n\tmapColumn(\n\t\tProductCategory,\n\t\tEndDate = StartDate\n\t),\n\tpartitionBy('roundRobin', 4),\n\tsaveOrder: 2,\n\terrorHandlingOption: 'stopOnFirstError') ~> sinkInactive\nRowHasChanged sink(input(\n\t\tProductCategory as integer,\n\t\tname as string,\n\t\tParentProductCategoryID as integer,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tProductCategory,\n\t\tname = DoesRowExist@CurrentRow@Name,\n\t\tParentProductCategoryID = DoesRowExist@CurrentRow@ParentProductCategoryID,\n\t\tStartDate,\n\t\tEndDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 3,\n\terrorHandlingOption: 'stopOnFirstError') ~> sinkChanges"
		}
	}
}